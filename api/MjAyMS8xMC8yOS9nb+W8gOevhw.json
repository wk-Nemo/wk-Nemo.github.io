{"title":"go开篇","date":"2021-10-29T09:05:50.000Z","date_formatted":{"ll":"Oct 29, 2021","L":"10/29/2021","MM-DD":"10-29"},"link":"2021/10/29/go开篇","categories":["go","后端"],"updated":"2023-05-07T09:47:14.527Z","content":"<h2 id=\"golang的学习方向\">Golang的学习方向<a title=\"#golang的学习方向\" href=\"#golang的学习方向\"></a></h2>\n<ul>\n<li>区块链研发工程师</li>\n<li>Go服务端工程师</li>\n<li>Go游戏软件工程师</li>\n<li>Golang分布式/云计算软件工程师</li>\n</ul>\n<h2 id=\"go开发环境准备\">Go开发环境准备<a title=\"#go开发环境准备\" href=\"#go开发环境准备\"></a></h2>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/zsy/p/5215336.html\" target=\"_blank\">GO语言下载、安装、配置</a></p>\n<p><a href=\"https://www.cnblogs.com/zsy/p/5223957.html\" target=\"_blank\">在Visual Studio Code中配置GO开发环境</a></p>\n</blockquote>\n<h2 id=\"hello-world\">Hello World<a title=\"#hello-world\" href=\"#hello-world\"></a></h2>\n<p>传世经典<code>Hello World</code></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;hello world&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字符串\">字符串<a title=\"#字符串\" href=\"#字符串\"></a></h2>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;strings&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(os.Args[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> s, sep <span class=\"type\">string</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i:=<span class=\"number\">1</span>; i &lt; <span class=\"built_in\">len</span>(os.Args); i++ &#123;</span><br><span class=\"line\">\t\ts += sep + os.Args[i]</span><br><span class=\"line\">\t\tsep = <span class=\"string\">&quot; &quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(s)</span><br><span class=\"line\"></span><br><span class=\"line\">\ts = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\tsep =  <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, arg := <span class=\"keyword\">range</span> os.Args[<span class=\"number\">1</span>:] &#123;</span><br><span class=\"line\">\t\ts += sep + arg</span><br><span class=\"line\">\t\tsep = <span class=\"string\">&quot; &quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(s)</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(strings.Join(os.Args[<span class=\"number\">1</span>:], <span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"输入输出流\">输入输出流<a title=\"#输入输出流\" href=\"#输入输出流\"></a></h2>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;bufio&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tcounts := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span>)</span><br><span class=\"line\">\tinput := bufio.NewScanner(os.Stdin)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> input.Scan() &#123;</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;%s\\n&quot;</span>, input.Text())</span><br><span class=\"line\">\t\tcounts[input.Text()]++</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> line, n := <span class=\"keyword\">range</span> counts &#123;</span><br><span class=\"line\">\t\t\tfmt.Printf(<span class=\"string\">&quot;%d %s\\n&quot;</span>, n, line)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"网络编程\">网络编程<a title=\"#网络编程\" href=\"#网络编程\"></a></h2>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, url := <span class=\"keyword\">range</span> os.Args[<span class=\"number\">1</span>:] &#123;</span><br><span class=\"line\">\t\tresp, err := http.Get(url)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> url != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\tfmt.Fprintf(os.Stderr, <span class=\"string\">&quot;fetch: %v\\n&quot;</span>, err)</span><br><span class=\"line\">\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tb, err := ioutil.ReadAll(resp.Body)</span><br><span class=\"line\">\t\tresp.Body.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\tfmt.Fprintf(os.Stderr, <span class=\"string\">&quot;fetch: reading %s: %v\\n&quot;</span>, url, err)</span><br><span class=\"line\">\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;%s&quot;</span>, b)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"并发编程\">并发编程<a title=\"#并发编程\" href=\"#并发编程\"></a></h2>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Fetchall fetches URLs in parallel and reports their times and sizes.</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">    <span class=\"string\">&quot;io&quot;</span></span><br><span class=\"line\">    <span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">    <span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\">    <span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\">    <span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    start := time.Now()</span><br><span class=\"line\">    ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">string</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> _, url := <span class=\"keyword\">range</span> os.Args[<span class=\"number\">1</span>:] &#123;</span><br><span class=\"line\">        <span class=\"keyword\">go</span> fetch(url, ch) <span class=\"comment\">// start a goroutine</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"keyword\">range</span> os.Args[<span class=\"number\">1</span>:] &#123;</span><br><span class=\"line\">        fmt.Println(&lt;-ch) <span class=\"comment\">// receive from channel ch</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">&quot;%.2fs elapsed\\n&quot;</span>, time.Since(start).Seconds())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fetch</span><span class=\"params\">(url <span class=\"type\">string</span>, ch <span class=\"keyword\">chan</span>&lt;- <span class=\"type\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    start := time.Now()</span><br><span class=\"line\">    resp, err := http.Get(url)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">        ch &lt;- fmt.Sprint(err) <span class=\"comment\">// send to channel ch</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    nbytes, err := io.Copy(ioutil.Discard, resp.Body)</span><br><span class=\"line\">    resp.Body.Close() <span class=\"comment\">// don&#x27;t leak resources</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">        ch &lt;- fmt.Sprintf(<span class=\"string\">&quot;while reading %s: %v&quot;</span>, url, err)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    secs := time.Since(start).Seconds()</span><br><span class=\"line\">    ch &lt;- fmt.Sprintf(<span class=\"string\">&quot;%.2fs  %7d  %s&quot;</span>, secs, nbytes, url)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"web服务\">Web服务<a title=\"#web服务\" href=\"#web服务\"></a></h2>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;sync&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> mu sync.Mutex</span><br><span class=\"line\"><span class=\"keyword\">var</span> count <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\thttp.HandleFunc(<span class=\"string\">&quot;/&quot;</span>, handler)</span><br><span class=\"line\">\thttp.HandleFunc(<span class=\"string\">&quot;/count&quot;</span>, counter)</span><br><span class=\"line\">\tlog.Fatal(http.ListenAndServe(<span class=\"string\">&quot;localhost:8000&quot;</span>, <span class=\"literal\">nil</span>))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// handler echoes the Path component of the requested URL.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">handler</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">\tmu.Lock()</span><br><span class=\"line\">\tcount++</span><br><span class=\"line\">\tmu.Unlock()</span><br><span class=\"line\">\tfmt.Fprintf(w, <span class=\"string\">&quot;URL.Path = %q\\n&quot;</span>, r.URL.Path)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// counter echoes the number of calls so far.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">counter</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">\tmu.Lock()</span><br><span class=\"line\">\tfmt.Fprintf(w, <span class=\"string\">&quot;Count %d\\n&quot;</span>, count)</span><br><span class=\"line\">\tmu.Unlock()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"go的程序结构","link":"2021/10/29/go的程序结构"},"next":{"title":"2022我的秋招","link":"2021/10/20/2022我的秋招"},"plink":"http://example.com/2021/10/29/go开篇/","toc":[{"id":"golang的学习方向","title":"Golang的学习方向","index":"1"},{"id":"go开发环境准备","title":"Go开发环境准备","index":"2"},{"id":"hello-world","title":"Hello World","index":"3"},{"id":"字符串","title":"字符串","index":"4"},{"id":"输入输出流","title":"输入输出流","index":"5"},{"id":"网络编程","title":"网络编程","index":"6"},{"id":"并发编程","title":"并发编程","index":"7"},{"id":"web服务","title":"Web服务","index":"8"}],"reading_time":"654 words in 4 min"}