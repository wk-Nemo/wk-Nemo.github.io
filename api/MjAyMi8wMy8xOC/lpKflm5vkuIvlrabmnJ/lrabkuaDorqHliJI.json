{"title":"大四下学期学习计划","date":"2022-03-18T02:45:09.000Z","date_formatted":{"ll":"Mar 18, 2022","L":"03/18/2022","MM-DD":"03-18"},"link":"2022/03/18/大四下学期学习计划","categories":["个人总结感想"],"updated":"2023-05-07T09:21:42.510Z","content":"<h2 id=\"0-写在前面\">0 写在前面<a title=\"#0-写在前面\" href=\"#0-写在前面\"></a></h2>\n<p>从开始学前端起，每个阶段都会给自己制定学习计划和目标，并跟着这份计划持续更新和学习。也正是有了这个习惯，我才能保证自己在学习的每个阶段不迷失方向。比如在刚开始学习前端时，那个寒假我的主要精力放在了 javaScript 的学习上，并学习了框架 Vue；在大三下学期，在我进行人生第一份实习的同时，也在准备春招，恶补了计算机基础知识，如：计算机网络、数据结构和算法、操作系统等；在自己的第二份实习中，主要精力放在了前端知识体系的搭建上，深入学习了 html、css、js、浏览器、Vue框架，并将之前阶段学习的计算机基础、前端知识进行了系统的总结，形成了自己的知识体系，也凭借这段时间的努力拿到了自己满意的 offer。</p>\n<p>以前我喜欢使用有道云笔记记录自己的学习计划，并时常更新。但最近自己的博客主体部分搭建完毕，也实现了自动化部署，我可以在自己的网站上记录自己的学习生活，也方便以后自己回顾人生的每个阶段干了什么。十年以后我再回头来看这篇文章，不是一件很有意思的事情吗？</p>\n<p>言归正传，这篇姗姗来迟的学习计划博客是我大学生涯的最后一个阶段，希望自己能过一个丰富多彩的大四下学期生涯。</p>\n<h2 id=\"1-提升方向\">1 提升方向<a title=\"#1-提升方向\" href=\"#1-提升方向\"></a></h2>\n<p>知己知彼，方能百战不殆。《高效能人士的七个习惯》将一个人的成功之路分为了三个阶段：依赖期、独立期和互赖期，从我自身来看目前处于从依赖期向独立期过渡的阶段。独立期的意思简单明了，能够独立做事，将自己手头的事情完成。我认为对于一个程序员而言，所谓独立期便是<strong>扎实的基础</strong>、<strong>高质量的完成工作</strong>和<strong>深耕某一领域</strong>。</p>\n<p>计算机基础这一块是永远都进行不完的部分，不管处于人生哪一个阶段，都会发现原来这里是这样，推翻自己之前的认知。</p>\n<ul>\n<li>html、css：css 应该不满足于使用阶段，计划读一本 css 的书</li>\n<li>js：js 的原理、怎么写出高质量的代码，这是作为前端工程师的生涯一直离不开的话题</li>\n<li>浏览器：秋招初步了解了一些原理性的东西，但是有计划还是要亲自去走一遭，毕竟自己沿路看到的风景和他人记录下来的还是有很大的差别</li>\n<li>node：包管理机制、常见后端框架原理等，node帮助我们前端工程师进化成大前端，更乃至全栈工程师</li>\n<li>vue、react框架：吃饭的家伙，重要性不用我多说</li>\n<li>构建工具：webpack、vite等，在前端工程化中扮演者重要的角色</li>\n<li>其他开发：微信小程序、h5、flutter、uniapp、ios、安卓等，多去了解，不单单局限于网页的开发</li>\n</ul>\n<p>随着前端项目日渐复杂，大型项目的管理和组织的合理性决定了项目的成败，也正是这一点上的经验，可以形成前端工程师的行业壁垒。常见的研发流水线如下：需求分析、开发方案设计、业务开发、单元测试、联调、QA测试、发布上线、后期运维</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8ceaec38304c443c830a121f78a6a54b~tplv-k3u1fbpfcp-watermark.image?\" alt=\"image.png\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>工程搭建\n<ul>\n<li>git：代码管理</li>\n<li>脚手架：去除重复性的工作，让项目搭建变得更加简单和可配置话</li>\n<li>前端架构设计：单页面、微前端等</li>\n</ul>\n</li>\n<li>业务开发：\n<ul>\n<li>高质量的代码，需要不断学习前辈的编码经验，多看、多学、多敲</li>\n<li>可重复单元沉淀：组件、逻辑库</li>\n</ul>\n</li>\n<li>发布上线 CI/CD\n<ul>\n<li>持续集成：代码卡控，代码测试</li>\n<li>持续部署：自动化的打包部署，省去人力</li>\n</ul>\n</li>\n<li>可靠性保证：\n<ul>\n<li>监控日志：业务检测、报警、及时解决bug</li>\n<li>技术指标度量</li>\n</ul>\n</li>\n</ul>\n<p>前端技术的技术特点是更新迭代快，每年都会有新的术语出现，新的技术潮流，要保证自己的持续学习。下面几个是自己最近感兴趣的方向：</p>\n<ul>\n<li>微前端：多团队合作前端架构</li>\n<li>Vue3：源码层次的学习</li>\n<li>服务端渲染：更好的SEO、更好的用户体验</li>\n<li>编译构建：webpack等构建工具，影响着线上打包的代码，开发时的效率</li>\n</ul>\n<h2 id=\"近期计划-&amp;&amp;-阅读计划\">近期计划 &amp;&amp; 阅读计划<a title=\"#近期计划-&amp;&amp;-阅读计划\" href=\"#近期计划-&amp;&amp;-阅读计划\"></a></h2>\n<ul>\n<li>git 基本操作学习</li>\n<li>ci/cd：持续集成和持续部署</li>\n<li>js学习\n<ul>\n<li>阅读大佬们的代码</li>\n<li>代码重构：阅读《重构：改善既有的代码设计》</li>\n<li>js原理：阅读《你不知道的js》</li>\n</ul>\n</li>\n<li>vue\n<ul>\n<li>原理了解：阅读《Vue.js设计与实现》</li>\n<li>vue3源码阅读</li>\n</ul>\n</li>\n<li>css：阅读《CSS世界》</li>\n<li>脚手架</li>\n<li>构建工具\n<ul>\n<li>webpack使用 + 原理学习</li>\n<li>vite使用 + 原理学习</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3.23\">3.23<a title=\"#3.23\" href=\"#3.23\"></a></h2>\n<p>首先说一下 git，在公司又重新学习了如何使用，并沉淀了一篇文章，后面有时间再搬出来。</p>\n<p>ci/cd 这一块了解了 github action，并对自己的博客做了自动化部署，掘金上发布了一篇文章。</p>\n<p>js 这边没什么动静，只是最近做了一个公司的 todo，写了一篇关于代码健壮性的博客。</p>\n<p>vue：</p>\n<ul>\n<li>重新上官网了解了 vue3 的新特性：<a href=\"https://v3.cn.vuejs.org/guide/migration/introduction.html#%E6%A6%82%E8%A7%88\" target=\"_blank\">Vue</a></li>\n<li>阅读了《Vue.js设计与实现》的模板编译部分</li>\n</ul>\n<p>脚手架读了一篇搭建脚手架的博客：<a href=\"https://juejin.cn/post/6966119324478079007\" target=\"_blank\">从 0 构建自己的脚手架/CLI知识体系（万字）</a>，并跟着后面做了一下。</p>\n<p>构建工具方面：</p>\n<ul>\n<li>读了一篇文章了解了 webpack 的常见实用方法：<a href=\"https://juejin.cn/post/7023242274876162084\" target=\"_blank\">🔥【万字】透过分析 webpack 面试题，构建 webpack5.x 知识体系</a></li>\n<li>读了一篇手写webpack原理的文章：<a href=\"https://juejin.cn/post/6854573217336541192\" target=\"_blank\">手写webpack核心原理，再也不怕面试官问我webpack原理</a></li>\n<li>阅读了 vite 的官方文档，大致了解了一下 vite 的新特性</li>\n</ul>\n<p>最后谈一谈自己最近的感受吧。</p>\n<p>首先，发现自己不能再和原来一样专门花一整块时间去学习一些比较难啃的东西，比如说阅读书籍，几个星期都读不完一本书，最后就半途而废。其次，有一点不知道自己到底要干什么的状态，有一种这里看一下那里看一下的感觉，感觉学到了一些东西，但是又好像没学到。自我分析一下，出现上述情况首先是因为没弄清楚前端到底该如何提升自己。应该明确两点：</p>\n<p>第一，做好业务，是技术价值的体现，现在常见的开发如 web开发（Vue、React）、小程序（各式各样的小程序）、跨端开发（安卓、ios）等。当需求给到自己时，要知道如何去实现，是否可以优化，用户体验上如何。</p>\n<p>第二，做好技术上的事情，这里其实也是用技术服务他人，只不过这里服务的对象从客户变成了开发者。比如项目搭建的脚手架、开发的框架、一些业务流程上的工具（CI/CD、业务监控）、开发过程中使用的组件库、构建工具等技术产物，都是为了帮助开发者提高开发效率。</p>\n<p>明白了这两点，那么自己的学习方向也应该分为两个方向。</p>\n<p>首先，完成公司的业务需求，如果决定公司的项目不够挑战性，可以自己开发一些有意思的产品并不断的去打磨和维护。在这个过程中会遇到很多的问题，比如 js 代码写的是否够优雅、性能是否最优、一些常见的功能如何去实现等，我们的开发经验在这时不断的积累，努力的从一个菜鸟变成前端职场上的老油条。</p>\n<p>其次，想做一个优秀的前端工程师，只会熟练的搬砖是不够的，需要在技术上有一定的沉淀。自己最近也是迷失在其中，又或者是说很多东西都不了解，去大致的了解了一下。这里给自己定下一个目标，专心去深耕一个领域，这里学一下那里学一下只能提高自己的视野，并不能让自己变得更强。当然我的意思不是说不要去了解和自己无关的事情，而是说大部分精力应该放在自己专注的事物上。</p>\n<p>最后总结</p>\n<ul>\n<li>近段时间专注领域：Vue3 原理学习，阅读完《Vue.js设计与实现》，做好笔记，并阅读 vue3 源码。</li>\n<li>近段时间感兴趣内容学习：\n<ul>\n<li>js 代码质量（作为基础知识，在自己的任何阶段都应该持续学习）：读书 + 博客沉淀</li>\n<li>浏览器：涉及到 v8 和构建工具，因此作为这一阶段的学习方向</li>\n<li>构建工具：webpack、vite有时间学习基础用法，等vue3原理了解完后再学习这一部分的原理</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3.30\">3.30<a title=\"#3.30\" href=\"#3.30\"></a></h2>\n<p>人生道路漫漫，切忌浮躁。</p>\n","prev":{"title":"js代码质量——健壮性","link":"2022/03/21/js代码质量——健壮性"},"next":{"title":"自动化部署Vue3博客项目","link":"2022/03/16/自动化部署Vue3博客项目"},"plink":"http://example.com/2022/03/18/大四下学期学习计划/","toc":[{"id":"0-写在前面","title":"0 写在前面","index":"1"},{"id":"1-提升方向","title":"1 提升方向","index":"2"},{"id":"近期计划-&&-阅读计划","title":"近期计划 &amp;&amp; 阅读计划","index":"3"},{"id":"3.23","title":"3.23","index":"4"},{"id":"3.30","title":"3.30","index":"5"}],"reading_time":"2411 words in 16 min"}