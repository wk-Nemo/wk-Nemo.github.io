{"title":"TypeScript","date":"2021-10-04T05:40:38.000Z","date_formatted":{"ll":"Oct 4, 2021","L":"10/04/2021","MM-DD":"10-04"},"link":"2021/10/04/TypeScript","categories":["TypeScript","前端"],"updated":"2023-05-07T09:48:59.164Z","content":"<h2 id=\"什么是typescript\">什么是TypeScript<a title=\"#什么是typescript\" href=\"#什么是typescript\"></a></h2>\n<ul>\n<li>JavaScript的超集</li>\n<li>静态类型风格的类型系统</li>\n<li>从es6到es10甚至事esnext的语法支持</li>\n<li>兼容各种浏览器，各种系统，各种服务器，完全开源</li>\n</ul>\n<h2 id=\"为什么使用typescript\">为什么使用TypeScript<a title=\"#为什么使用typescript\" href=\"#为什么使用typescript\"></a></h2>\n<ul>\n<li>\n<p>程序更容易理解</p>\n<ul>\n<li>函数或方法输入输出参数类型，外部条件</li>\n<li>动态语言的约束：需要手动调试等过程</li>\n<li>TypeScript：代码本身就可以解决上述问题</li>\n</ul>\n</li>\n<li>\n<p>效率更高</p>\n<ul>\n<li>在不同代码块和定义之间进行跳转</li>\n<li>代码自动补全</li>\n<li>丰富的接口提示</li>\n</ul>\n</li>\n<li>\n<p>更少的错误</p>\n<ul>\n<li>编译期间发现大部分错误</li>\n<li>杜绝一些常见的错误</li>\n</ul>\n</li>\n<li>\n<p>更好的包容性</p>\n<ul>\n<li>完全兼容JavaScript</li>\n<li>第三方库可以单独编写类型文件</li>\n<li>流行项目支持TypeScript-React、Vue、Angular、Ant Design等</li>\n</ul>\n</li>\n<li>\n<p>一些缺点</p>\n<ul>\n<li>增加了学习成本</li>\n<li>短期内增加了开发成本</li>\n<li>要根据需求和工程规模合理选择</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装typescript\">安装TypeScript<a title=\"#安装typescript\" href=\"#安装typescript\"></a></h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g typescript</span><br><span class=\"line\">npm install -g ts-node</span><br></pre></td></tr></table></figure>\n<p><code>ts-node</code>可以合并typescript的编译和运行两个步骤</p>\n<h2 id=\"定义类型\">定义类型<a title=\"#定义类型\" href=\"#定义类型\"></a></h2>\n<h4 id=\"1.-基本类型判断\">1. 基本类型判断<a title=\"#1.-基本类型判断\" href=\"#1.-基本类型判断\"></a></h4>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基础类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">isDone</span>: <span class=\"built_in\">boolean</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">age</span>: <span class=\"built_in\">number</span> = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">firstName</span>: <span class=\"built_in\">string</span> = <span class=\"string\">&quot;wu&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">u</span>: <span class=\"literal\">undefined</span> = <span class=\"literal\">undefined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">n</span>: <span class=\"literal\">null</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// undefined 和 null 可以赋值给任何类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">num</span>: <span class=\"built_in\">number</span> = <span class=\"literal\">undefined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">str</span>: <span class=\"built_in\">string</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// any 表示任何类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">notSure</span>: <span class=\"built_in\">any</span> = <span class=\"number\">4</span></span><br><span class=\"line\">notSure = <span class=\"string\">&#x27;string&#x27;</span></span><br><span class=\"line\">notSure = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 联合类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">numberOrString</span>: <span class=\"built_in\">number</span> | <span class=\"built_in\">string</span> = <span class=\"number\">234</span></span><br><span class=\"line\">numberOrString = <span class=\"string\">&#x27;str&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// arr 和 tuple</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">arrOfNumber</span>: <span class=\"built_in\">number</span>[] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">arrOfNumber.<span class=\"title function_\">push</span>(<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// tuple 元组对数组进行了一个更精准的限制</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">user</span>: [<span class=\"built_in\">string</span>, <span class=\"built_in\">number</span>] = [<span class=\"string\">&#x27;viking&#x27;</span>, <span class=\"number\">20</span>]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"2.-interface-接口\">2. interface 接口<a title=\"#2.-interface-接口\" href=\"#2.-interface-接口\"></a></h4>\n<ul>\n<li>对对象的形状进行描述</li>\n<li>对类（class）进行抽象</li>\n<li>鸭子类型（Duck Typing）</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// readonly 只读不可修改</span></span><br><span class=\"line\"><span class=\"comment\">// ? 表示不一定必须有该属性</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">readonly</span> <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  school?: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">viking</span>: <span class=\"title class_\">Person</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;viking&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">wk</span>: <span class=\"title class_\">Person</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;wk&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">  <span class=\"attr\">school</span>: <span class=\"string\">&#x27;WHUT&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3.-函数\">3. 函数<a title=\"#3.-函数\" href=\"#3.-函数\"></a></h4>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">x: <span class=\"built_in\">number</span>, y: <span class=\"built_in\">number</span>, z?: <span class=\"built_in\">number</span></span>): <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> z === <span class=\"string\">&#x27;number&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y + z</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">add2</span>: <span class=\"function\">(<span class=\"params\">x: <span class=\"built_in\">number</span>, y: <span class=\"built_in\">number</span>, z?: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">number</span> = add</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">result</span>: <span class=\"built_in\">number</span> = <span class=\"title function_\">add</span>(<span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result)</span><br><span class=\"line\"></span><br><span class=\"line\">result = <span class=\"title function_\">add</span>(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result)</span><br></pre></td></tr></table></figure>\n<h4 id=\"4.-类型判断\">4. 类型判断<a title=\"#4.-类型判断\" href=\"#4.-类型判断\"></a></h4>\n<p>当我们没有显示的声明时，TypeScript会自动推测一个类型。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;str&#x27;</span></span><br><span class=\"line\">str = <span class=\"number\">123</span> <span class=\"comment\">// 报错</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"5.-类\">5. 类<a title=\"#5.-类\" href=\"#5.-类\"></a></h4>\n<ul>\n<li>类（Class）：定义了一切事务的抽象特点</li>\n<li>对象（Object）：类的实例</li>\n<li>面向对象（OOP）三大特性：封装、继承、多态</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">name: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">run</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.name&#125;</span> is running`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> snake = <span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>(<span class=\"string\">&#x27;lily&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(snake.<span class=\"title function_\">run</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Animal</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">bark</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.name&#125;</span> is barking`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> mike = <span class=\"keyword\">new</span> <span class=\"title class_\">Dog</span>(<span class=\"string\">&#x27;Mike&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(mike.<span class=\"title function_\">run</span>())</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(mike.<span class=\"title function_\">bark</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Animal</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">run</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`Meow, `</span> + <span class=\"variable language_\">super</span>.<span class=\"title function_\">run</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> cat = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"string\">&#x27;maomao&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(cat.<span class=\"title function_\">run</span>())</span><br></pre></td></tr></table></figure>\n<p>ts还添加了几种修饰符</p>\n<ul>\n<li>public：都可以访问</li>\n<li>private：只有自己可访问</li>\n<li>protected：自己和子类可以访问</li>\n<li>readonly：只读</li>\n<li>static：添加静态属性和静态方法</li>\n</ul>\n<h2 id=\"泛型（generics）\">泛型（Generics）<a title=\"#泛型（generics）\" href=\"#泛型（generics）\"></a></h2>\n<p>泛型主要是定义了不确定的类型，在使用的时候再确定。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> echo&lt;T&gt;(<span class=\"attr\">arg</span>: T): T &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arg</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"title function_\">echo</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> swap&lt;T, U&gt;(<span class=\"attr\">tuple</span>: [T, U]): [U, T] &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [tuple[<span class=\"number\">1</span>], tuple[<span class=\"number\">0</span>]]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result2 = <span class=\"title function_\">swap</span>([<span class=\"string\">&#x27;str&#x27;</span>, <span class=\"number\">123</span>])</span><br><span class=\"line\">result2[<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n<h4 id=\"1.-泛型约束\">1. 泛型约束<a title=\"#1.-泛型约束\" href=\"#1.-泛型约束\"></a></h4>\n<p>使用interface对泛型进行约束</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> echoWithArr&lt;T&gt;(<span class=\"attr\">arg</span>: T[]): T[] &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arg.<span class=\"property\">length</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arg</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IWithLength</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">length</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> echoWithLength&lt;T <span class=\"keyword\">extends</span> <span class=\"title class_\">IWithLength</span>&gt;(<span class=\"attr\">arg</span>: T): T &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arg.<span class=\"property\">length</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arg</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"title function_\">echoWithLength</span>(<span class=\"string\">&#x27;str&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"title function_\">echoWithLength</span>(&#123;<span class=\"attr\">length</span>: <span class=\"number\">10</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = <span class=\"title function_\">echoWithLength</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br></pre></td></tr></table></figure>\n<h4 id=\"2.-类\">2. 类<a title=\"#2.-类\" href=\"#2.-类\"></a></h4>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Queue</span>&lt;T&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> data = []</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">push</span>(<span class=\"params\">item: T</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">data</span>.<span class=\"title function_\">push</span>(item)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">pop</span>(): T &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">data</span>.<span class=\"title function_\">shift</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> queue = <span class=\"keyword\">new</span> <span class=\"title class_\">Queue</span>&lt;<span class=\"built_in\">number</span>&gt;()</span><br><span class=\"line\">queue.<span class=\"title function_\">push</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">queue.<span class=\"title function_\">push</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> queue2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Queue</span>&lt;<span class=\"built_in\">string</span>&gt;()</span><br><span class=\"line\">queue2.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;str&#x27;</span>)</span><br><span class=\"line\">queue2.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;mike&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3.-接口\">3. 接口<a title=\"#3.-接口\" href=\"#3.-接口\"></a></h4>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">interface</span>: keyPair&lt;T, U&gt; &#123;</span><br><span class=\"line\">  <span class=\"attr\">key</span>: T;</span><br><span class=\"line\">  <span class=\"attr\">value</span>: U;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">kp1</span>: <span class=\"title class_\">KeyPair</span>&lt;<span class=\"built_in\">number</span>, <span class=\"built_in\">string</span>&gt; = &#123; <span class=\"attr\">key</span>:<span class=\"number\">123</span>, <span class=\"attr\">value</span>:<span class=\"string\">&quot;str&quot;</span> &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4.-数组\">4. 数组<a title=\"#4.-数组\" href=\"#4.-数组\"></a></h4>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">arr</span>: <span class=\"built_in\">number</span>[] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">arr2</span>: <span class=\"title class_\">Array</span>&lt;<span class=\"built_in\">number</span>&gt; = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br></pre></td></tr></table></figure>\n<h4 id=\"5.-函数\">5. 函数<a title=\"#5.-函数\" href=\"#5.-函数\"></a></h4>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPlus</span>&lt;T&gt; &#123;</span><br><span class=\"line\">  (<span class=\"attr\">a</span>: T, <span class=\"attr\">b</span>: T) : T</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">plus</span>(<span class=\"params\">a: <span class=\"built_in\">number</span>, b: <span class=\"built_in\">number</span></span>) : <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">connect</span>(<span class=\"params\">a: <span class=\"built_in\">string</span>, b: <span class=\"built_in\">string</span></span>) : <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">a</span>: <span class=\"title class_\">IPlus</span>&lt;<span class=\"built_in\">number</span>&gt; = plus</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">b</span>: <span class=\"title class_\">IPlus</span>&lt;<span class=\"built_in\">string</span>&gt; = connect</span><br></pre></td></tr></table></figure>\n<h2 id=\"类型别名\">类型别名<a title=\"#类型别名\" href=\"#类型别名\"></a></h2>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">PlusType</span> = <span class=\"function\">(<span class=\"params\">x: <span class=\"built_in\">number</span>, y: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">number</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">x: <span class=\"built_in\">number</span>, y: <span class=\"built_in\">number</span></span>): <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">sum2</span>: <span class=\"title class_\">PlusType</span> = sum</span><br></pre></td></tr></table></figure>\n<h4 id=\"1.-联合类型\">1. 联合类型<a title=\"#1.-联合类型\" href=\"#1.-联合类型\"></a></h4>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">NameResolver</span> = <span class=\"function\">() =&gt;</span> <span class=\"built_in\">string</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">NameOrResolver</span> = <span class=\"built_in\">string</span> | <span class=\"title class_\">NameResolver</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getName</span>(<span class=\"params\">n: NameOrResolver</span>): <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> n === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">n</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"类型断言\">类型断言<a title=\"#类型断言\" href=\"#类型断言\"></a></h2>\n<p>通过<code>as</code>表示你对一些类型的判断</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getLength</span>(<span class=\"params\">input: <span class=\"built_in\">string</span> | <span class=\"built_in\">number</span></span>): <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> str = input <span class=\"keyword\">as</span> <span class=\"title class_\">String</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(str.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.<span class=\"property\">length</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> str</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>另一种方法</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getLength</span>(<span class=\"params\">input: <span class=\"built_in\">string</span> | <span class=\"built_in\">number</span></span>): <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>((&lt;<span class=\"built_in\">string</span>&gt;input).<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (&lt;<span class=\"built_in\">string</span>&gt;input).<span class=\"property\">length</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> input.<span class=\"title function_\">toString</span>().<span class=\"property\">length</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"React With TypeScript","link":"2021/10/04/React With TypeScript"},"next":{"title":"秋招保驾护航——操作系统篇","link":"2021/09/14/秋招保驾护航——操作系统篇"},"plink":"http://example.com/2021/10/04/TypeScript/","toc":[{"id":"什么是typescript","title":"什么是TypeScript","index":"1"},{"id":"为什么使用typescript","title":"为什么使用TypeScript","index":"2"},{"id":"安装typescript","title":"安装TypeScript","index":"3"},{"id":"定义类型","title":"定义类型","index":"4"},{"id":"泛型（generics）","title":"泛型（Generics）","index":"5"},{"id":"类型别名","title":"类型别名","index":"6"},{"id":"类型断言","title":"类型断言","index":"7"}],"reading_time":"1251 words in 8 min"}