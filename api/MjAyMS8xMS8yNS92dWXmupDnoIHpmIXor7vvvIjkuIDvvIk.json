{"title":"vue源码阅读—入口流程","date":"2021-11-25T14:34:18.000Z","date_formatted":{"ll":"Nov 25, 2021","L":"11/25/2021","MM-DD":"11-25"},"link":"2021/11/25/vue源码阅读（一）","categories":["Vue"],"updated":"2023-05-17T12:22:57.217Z","content":"<h2 id=\"从一个demo开始\">从一个demo开始<a title=\"#从一个demo开始\" href=\"#从一个demo开始\"></a></h2>\n<p>今天开始阅读vue源码，首先写一个简单的demo进行debugger摸清楚整个初始化的流程。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;a&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">debugger</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> vm = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">a</span>: <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"new-vue\">new Vue<a title=\"#new-vue\" href=\"#new-vue\"></a></h2>\n<p><code>new Vue</code>执行的是在<code>src/core/instance/index.js</code>中暴露出的<code>Vue</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; initMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./init&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; stateMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./state&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; renderMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./render&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; eventsMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./events&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; lifecycleMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./lifecycle&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; warn &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../util/index&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Vue</span> (options) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp;</span><br><span class=\"line\">    !(<span class=\"variable language_\">this</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;Vue is a constructor and should be called with the `new` keyword&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">_init</span>(options)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">initMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">stateMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">eventsMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">lifecycleMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">renderMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Vue</span></span><br></pre></td></tr></table></figure>\n<p>接着会执行<code>this._init(options)</code>,<code>_init</code>是在<code>scr/core/instance/init.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">initMixin</span> (<span class=\"title class_\">Vue</span>: <span class=\"title class_\">Class</span>&lt;<span class=\"title class_\">Component</span>&gt;) &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">_init</span> = <span class=\"keyword\">function</span> (<span class=\"params\">options?: <span class=\"built_in\">Object</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span> = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"comment\">// a uid</span></span><br><span class=\"line\">    vm.<span class=\"property\">_uid</span> = uid++</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> startTag, endTag</span><br><span class=\"line\">    <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; config.<span class=\"property\">performance</span> &amp;&amp; mark) &#123;</span><br><span class=\"line\">      startTag = <span class=\"string\">`vue-perf-start:<span class=\"subst\">$&#123;vm._uid&#125;</span>`</span></span><br><span class=\"line\">      endTag = <span class=\"string\">`vue-perf-end:<span class=\"subst\">$&#123;vm._uid&#125;</span>`</span></span><br><span class=\"line\">      <span class=\"title function_\">mark</span>(startTag)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// a flag to avoid this being observed</span></span><br><span class=\"line\">    vm.<span class=\"property\">_isVue</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\">// merge options</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (options &amp;&amp; options.<span class=\"property\">_isComponent</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// optimize internal component instantiation</span></span><br><span class=\"line\">      <span class=\"comment\">// since dynamic options merging is pretty slow, and none of the</span></span><br><span class=\"line\">      <span class=\"comment\">// internal component options needs special treatment.</span></span><br><span class=\"line\">      <span class=\"title function_\">initInternalComponent</span>(vm, options)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      vm.<span class=\"property\">$options</span> = <span class=\"title function_\">mergeOptions</span>(</span><br><span class=\"line\">        <span class=\"title function_\">resolveConstructorOptions</span>(vm.<span class=\"property\">constructor</span>),</span><br><span class=\"line\">        options || &#123;&#125;,</span><br><span class=\"line\">        vm</span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/* istanbul ignore else */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">initProxy</span>(vm)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      vm.<span class=\"property\">_renderProxy</span> = vm</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// expose real self</span></span><br><span class=\"line\">    vm.<span class=\"property\">_self</span> = vm</span><br><span class=\"line\">    <span class=\"title function_\">initLifecycle</span>(vm)</span><br><span class=\"line\">    <span class=\"title function_\">initEvents</span>(vm)</span><br><span class=\"line\">    <span class=\"title function_\">initRender</span>(vm)</span><br><span class=\"line\">    <span class=\"title function_\">callHook</span>(vm, <span class=\"string\">&#x27;beforeCreate&#x27;</span>)</span><br><span class=\"line\">    <span class=\"title function_\">initInjections</span>(vm) <span class=\"comment\">// resolve injections before data/props</span></span><br><span class=\"line\">    <span class=\"title function_\">initState</span>(vm)</span><br><span class=\"line\">    <span class=\"title function_\">initProvide</span>(vm) <span class=\"comment\">// resolve provide after data/props</span></span><br><span class=\"line\">    <span class=\"title function_\">callHook</span>(vm, <span class=\"string\">&#x27;created&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; config.<span class=\"property\">performance</span> &amp;&amp; mark) &#123;</span><br><span class=\"line\">      vm.<span class=\"property\">_name</span> = <span class=\"title function_\">formatComponentName</span>(vm, <span class=\"literal\">false</span>)</span><br><span class=\"line\">      <span class=\"title function_\">mark</span>(endTag)</span><br><span class=\"line\">      <span class=\"title function_\">measure</span>(<span class=\"string\">`vue <span class=\"subst\">$&#123;vm._name&#125;</span> init`</span>, startTag, endTag)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (vm.<span class=\"property\">$options</span>.<span class=\"property\">el</span>) &#123;</span><br><span class=\"line\">      vm.$mount(vm.<span class=\"property\">$options</span>.<span class=\"property\">el</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码干了几件事情：</p>\n<ul>\n<li>定义了一个<code>vm</code>，初始化的值为我们<code>new Vue</code>时传入的参数，并在这个对象加入了几个新的值如:\n<ul>\n<li><code>_uid = 0</code></li>\n<li><code>_isVue = true</code></li>\n<li><code>$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || &#123;&#125;, vm)</code></li>\n<li><code>vm._self = vm</code></li>\n</ul>\n</li>\n<li>一系列的初始化\n<ul>\n<li><code>initLifecycle(vm)</code></li>\n<li><code>initEvents(vm) </code></li>\n<li><code>initRender(vm) </code></li>\n<li><code>callHook(vm, 'beforeCreate')</code></li>\n<li><code>initInjections(vm) </code></li>\n<li><code>initState(vm)</code></li>\n<li><code>initProvide(vm) </code></li>\n<li><code>callHook(vm, 'created')</code></li>\n</ul>\n</li>\n<li><code>vm.$mount(vm.$options.el)</code> 进行挂载</li>\n</ul>\n<h2 id=\"给vm添加$option\">给<code>vm</code>添加<code>$option</code><a title=\"#给vm添加$option\" href=\"#给vm添加$option\"></a></h2>\n<p>本来我没在意<code>$option</code>这个参数，但是在后面的阅读中，发现很多参数是在<code>$option</code>中取出来的，因此特地花一个小节来看看<code>mergeOptions</code>函数做了啥。</p>\n<p><code>mergeOption</code>函数定义在<code>src/core/util/options.js</code>中</p>\n<ul>\n<li>还没看详细的代码，从定义的位置可以猜出这个函数是一个工具作用，专门用来<strong>合并选项</strong>。</li>\n<li>本打算继续深入看函数是如何实现的，会不会新添加了什么选项到<code>option</code>，但看到函数的注释后可以清晰的理解它只是合并两个<code>option</code>。因此我没必要关系它是如何实现的，而应该关心调用它的地方到底合并了哪两个<code>option</code>.</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Merge two option objects into a new one.</span></span><br><span class=\"line\"><span class=\"comment\"> * Core utility used in both instantiation and inheritance.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">mergeOptions</span> (</span><br><span class=\"line\">  <span class=\"attr\">parent</span>: <span class=\"title class_\">Object</span>,</span><br><span class=\"line\">  <span class=\"attr\">child</span>: <span class=\"title class_\">Object</span>,</span><br><span class=\"line\">  vm?: <span class=\"title class_\">Component</span></span><br><span class=\"line\">): <span class=\"title class_\">Object</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">checkComponents</span>(child)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> child === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    child = child.<span class=\"property\">options</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">normalizeProps</span>(child, vm)</span><br><span class=\"line\">  <span class=\"title function_\">normalizeInject</span>(child, vm)</span><br><span class=\"line\">  <span class=\"title function_\">normalizeDirectives</span>(child)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Apply extends and mixins on the child options,</span></span><br><span class=\"line\">  <span class=\"comment\">// but only if it is a raw options object that isn&#x27;t</span></span><br><span class=\"line\">  <span class=\"comment\">// the result of another mergeOptions call.</span></span><br><span class=\"line\">  <span class=\"comment\">// Only merged options has the _base property.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!child.<span class=\"property\">_base</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (child.<span class=\"property\">extends</span>) &#123;</span><br><span class=\"line\">      parent = <span class=\"title function_\">mergeOptions</span>(parent, child.<span class=\"property\">extends</span>, vm)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (child.<span class=\"property\">mixins</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, l = child.<span class=\"property\">mixins</span>.<span class=\"property\">length</span>; i &lt; l; i++) &#123;</span><br><span class=\"line\">        parent = <span class=\"title function_\">mergeOptions</span>(parent, child.<span class=\"property\">mixins</span>[i], vm)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> options = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> key</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> parent) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">mergeField</span>(key)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> child) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_\">hasOwn</span>(parent, key)) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">mergeField</span>(key)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">mergeField</span> (key) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> strat = strats[key] || defaultStrat</span><br><span class=\"line\">    options[key] = <span class=\"title function_\">strat</span>(parent[key], child[key], vm, key)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> options</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们回到参数这里，在<code>_init</code>中调用<code>mergeOption</code>时传入了三个参数：</p>\n<ul>\n<li><code>resolveConstructorOptions(vm.constructor)</code></li>\n<li><code>options || &#123;&#125;</code>，我们<code>new Vue</code>时传入的参数</li>\n<li><code>vm</code></li>\n</ul>\n<p>最后我们可以在控制台打印<code>vm</code>看看此时该对象内部有哪些内容</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/facfa86a896043fb91d71b7458402bdf~tplv-k3u1fbpfcp-watermark.image?\" alt=\"image.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"一系列的初始化\">一系列的初始化<a title=\"#一系列的初始化\" href=\"#一系列的初始化\"></a></h2>\n<p>上面我们弄清楚了在一系列的操作后<code>vm</code>里面有了哪些东西，接下来我们就要看看一系列的初始化到底干了啥。</p>\n<ul>\n<li><code>initLifecycle(vm)</code></li>\n<li><code>initEvents(vm) </code></li>\n<li><code>initRender(vm) </code></li>\n<li><code>callHook(vm, 'beforeCreate')</code></li>\n<li><code>initInjections(vm) </code></li>\n<li><code>initState(vm)</code></li>\n<li><code>initProvide(vm) </code></li>\n<li><code>callHook(vm, 'created')</code></li>\n</ul>\n<p>一、<code>initLifecycle(vm)</code>给<code>vm</code>上添加了很多的<code>$xxx</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">initLifecycle</span> (<span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> options = vm.<span class=\"property\">$options</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// locate first non-abstract parent</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> parent = options.<span class=\"property\">parent</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (parent &amp;&amp; !options.<span class=\"property\">abstract</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (parent.<span class=\"property\">$options</span>.<span class=\"property\">abstract</span> &amp;&amp; parent.<span class=\"property\">$parent</span>) &#123;</span><br><span class=\"line\">      parent = parent.<span class=\"property\">$parent</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    parent.<span class=\"property\">$children</span>.<span class=\"title function_\">push</span>(vm)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  vm.<span class=\"property\">$parent</span> = parent</span><br><span class=\"line\">  vm.<span class=\"property\">$root</span> = parent ? parent.<span class=\"property\">$root</span> : vm</span><br><span class=\"line\"></span><br><span class=\"line\">  vm.<span class=\"property\">$children</span> = []</span><br><span class=\"line\">  vm.<span class=\"property\">$refs</span> = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  vm.<span class=\"property\">_watcher</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">  vm.<span class=\"property\">_inactive</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">  vm.<span class=\"property\">_directInactive</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  vm.<span class=\"property\">_isMounted</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  vm.<span class=\"property\">_isDestroyed</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  vm.<span class=\"property\">_isBeingDestroyed</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>二、<code>initEvents(vm) </code>初始化也只给<code>vm</code>是添加了<code>_events</code>和<code>_hasHookEvent</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">initEvents</span> (<span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span>) &#123;</span><br><span class=\"line\">  vm.<span class=\"property\">_events</span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>)</span><br><span class=\"line\">  vm.<span class=\"property\">_hasHookEvent</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\">// init parent attached events</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> listeners = vm.<span class=\"property\">$options</span>.<span class=\"property\">_parentListeners</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (listeners) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">updateComponentListeners</span>(vm, listeners)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>三、<code>initRender(vm) </code>上半段同上面一样，添加了一些内容在<code>vm</code>上</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">initRender</span> (<span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span>) &#123;</span><br><span class=\"line\">  vm.<span class=\"property\">_vnode</span> = <span class=\"literal\">null</span> <span class=\"comment\">// the root of the child tree</span></span><br><span class=\"line\">  vm.<span class=\"property\">_staticTrees</span> = <span class=\"literal\">null</span> <span class=\"comment\">// v-once cached trees</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> options = vm.<span class=\"property\">$options</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> parentVnode = vm.<span class=\"property\">$vnode</span> = options.<span class=\"property\">_parentVnode</span> <span class=\"comment\">// the placeholder node in parent tree</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> renderContext = parentVnode &amp;&amp; parentVnode.<span class=\"property\">context</span></span><br><span class=\"line\">  vm.<span class=\"property\">$slots</span> = <span class=\"title function_\">resolveSlots</span>(options.<span class=\"property\">_renderChildren</span>, renderContext)</span><br><span class=\"line\">  vm.<span class=\"property\">$scopedSlots</span> = emptyObject</span><br><span class=\"line\">  <span class=\"comment\">// bind the createElement fn to this instance</span></span><br><span class=\"line\">  <span class=\"comment\">// so that we get proper render context inside it.</span></span><br><span class=\"line\">  <span class=\"comment\">// args order: tag, data, children, normalizationType, alwaysNormalize</span></span><br><span class=\"line\">  <span class=\"comment\">// internal version is used by render functions compiled from templates</span></span><br><span class=\"line\">  vm.<span class=\"property\">_c</span> = <span class=\"function\">(<span class=\"params\">a, b, c, d</span>) =&gt;</span> <span class=\"title function_\">createElement</span>(vm, a, b, c, d, <span class=\"literal\">false</span>)</span><br><span class=\"line\">  <span class=\"comment\">// normalization is always applied for the public version, used in</span></span><br><span class=\"line\">  <span class=\"comment\">// user-written render functions.</span></span><br><span class=\"line\">  vm.<span class=\"property\">$createElement</span> = <span class=\"function\">(<span class=\"params\">a, b, c, d</span>) =&gt;</span> <span class=\"title function_\">createElement</span>(vm, a, b, c, d, <span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// $attrs &amp; $listeners are exposed for easier HOC creation.</span></span><br><span class=\"line\">  <span class=\"comment\">// they need to be reactive so that HOCs using them are always updated</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> parentData = parentVnode &amp;&amp; parentVnode.<span class=\"property\">data</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* istanbul ignore else */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">defineReactive</span>(vm, <span class=\"string\">&#x27;$attrs&#x27;</span>, parentData &amp;&amp; parentData.<span class=\"property\">attrs</span> || emptyObject, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      !isUpdatingChildComponent &amp;&amp; <span class=\"title function_\">warn</span>(<span class=\"string\">`$attrs is readonly.`</span>, vm)</span><br><span class=\"line\">    &#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"title function_\">defineReactive</span>(vm, <span class=\"string\">&#x27;$listeners&#x27;</span>, options.<span class=\"property\">_parentListeners</span> || emptyObject, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      !isUpdatingChildComponent &amp;&amp; <span class=\"title function_\">warn</span>(<span class=\"string\">`$listeners is readonly.`</span>, vm)</span><br><span class=\"line\">    &#125;, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">defineReactive</span>(vm, <span class=\"string\">&#x27;$attrs&#x27;</span>, parentData &amp;&amp; parentData.<span class=\"property\">attrs</span> || emptyObject, <span class=\"literal\">null</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"title function_\">defineReactive</span>(vm, <span class=\"string\">&#x27;$listeners&#x27;</span>, options.<span class=\"property\">_parentListeners</span> || emptyObject, <span class=\"literal\">null</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意到后面最后一步时<code>defineReactive</code>函数大有乾坤，该函数的位置在<code>src/core/observer/index.js</code>。如果你之前了解了vue的数据双向绑定的原理，那么对这段代码你一定不会陌生，他是对对象进行了处理，为数据的双向绑定做了铺垫。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Define a reactive property on an Object.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">defineReactive</span> (</span><br><span class=\"line\">  <span class=\"attr\">obj</span>: <span class=\"title class_\">Object</span>,</span><br><span class=\"line\">  <span class=\"attr\">key</span>: string,</span><br><span class=\"line\">  <span class=\"attr\">val</span>: any,</span><br><span class=\"line\">  customSetter?: ?<span class=\"title class_\">Function</span>,</span><br><span class=\"line\">  shallow?: boolean</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dep = <span class=\"keyword\">new</span> <span class=\"title class_\">Dep</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> property = <span class=\"title class_\">Object</span>.<span class=\"title function_\">getOwnPropertyDescriptor</span>(obj, key)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (property &amp;&amp; property.<span class=\"property\">configurable</span> === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// cater for pre-defined getter/setters</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> getter = property &amp;&amp; property.<span class=\"property\">get</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> setter = property &amp;&amp; property.<span class=\"property\">set</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ((!getter || setter) &amp;&amp; <span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span> === <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    val = obj[key]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> childOb = !shallow &amp;&amp; <span class=\"title function_\">observe</span>(val)</span><br><span class=\"line\">  <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(obj, key, &#123;</span><br><span class=\"line\">    <span class=\"attr\">enumerable</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">configurable</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">get</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">reactiveGetter</span> () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> value = getter ? getter.<span class=\"title function_\">call</span>(obj) : val</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title class_\">Dep</span>.<span class=\"property\">target</span>) &#123;</span><br><span class=\"line\">        dep.<span class=\"title function_\">depend</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (childOb) &#123;</span><br><span class=\"line\">          childOb.<span class=\"property\">dep</span>.<span class=\"title function_\">depend</span>()</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(value)) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">dependArray</span>(value)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> value</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">set</span>: <span class=\"keyword\">function</span> <span class=\"title function_\">reactiveSetter</span> (newVal) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> value = getter ? getter.<span class=\"title function_\">call</span>(obj) : val</span><br><span class=\"line\">      <span class=\"comment\">/* eslint-disable no-self-compare */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (newVal === value || (newVal !== newVal &amp;&amp; value !== value)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">/* eslint-enable no-self-compare */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; customSetter) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">customSetter</span>()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// #7981: for accessor properties without setter</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (getter &amp;&amp; !setter) <span class=\"keyword\">return</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (setter) &#123;</span><br><span class=\"line\">        setter.<span class=\"title function_\">call</span>(obj, newVal)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        val = newVal</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      childOb = !shallow &amp;&amp; <span class=\"title function_\">observe</span>(newVal)</span><br><span class=\"line\">      dep.<span class=\"title function_\">notify</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>四、看到这一串代码最瞩目的就是<code>callHook(vm, 'beforeCreate')</code>和<code>callHook(vm, 'created')</code>，很自然而然的就可以将它和生命周期联想到一起。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">callHook</span> (<span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span>, <span class=\"attr\">hook</span>: string) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// #7573 disable dep collection when invoking lifecycle hooks</span></span><br><span class=\"line\">  <span class=\"title function_\">pushTarget</span>()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> handlers = vm.<span class=\"property\">$options</span>[hook]</span><br><span class=\"line\">  <span class=\"keyword\">const</span> info = <span class=\"string\">`<span class=\"subst\">$&#123;hook&#125;</span> hook`</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (handlers) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = handlers.<span class=\"property\">length</span>; i &lt; j; i++) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">invokeWithErrorHandling</span>(handlers[i], vm, <span class=\"literal\">null</span>, vm, info)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (vm.<span class=\"property\">_hasHookEvent</span>) &#123;</span><br><span class=\"line\">    vm.$emit(<span class=\"string\">&#x27;hook:&#x27;</span> + hook)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">popTarget</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>五、<code>initInjections(vm) </code>这里初始化的时候都是<code>undefined</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">initInjections</span> (<span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = <span class=\"title function_\">resolveInject</span>(vm.<span class=\"property\">$options</span>.<span class=\"property\">inject</span>, vm)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (result) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">toggleObserving</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(result).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore else */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">defineReactive</span>(vm, key, result[key], <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">            <span class=\"string\">`Avoid mutating an injected value directly since the changes will be `</span> +</span><br><span class=\"line\">            <span class=\"string\">`overwritten whenever the provided component re-renders. `</span> +</span><br><span class=\"line\">            <span class=\"string\">`injection being mutated: &quot;<span class=\"subst\">$&#123;key&#125;</span>&quot;`</span>,</span><br><span class=\"line\">            vm</span><br><span class=\"line\">          )</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">defineReactive</span>(vm, key, result[key])</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"title function_\">toggleObserving</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>六、<code>initState(vm)</code> 这段代码比较直接，可以清楚的看到对<code>props</code>，<code>methods</code>和<code>data</code>进行了初始化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">initState</span> (<span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span>) &#123;</span><br><span class=\"line\">  vm.<span class=\"property\">_watchers</span> = []</span><br><span class=\"line\">  <span class=\"keyword\">const</span> opts = vm.<span class=\"property\">$options</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (opts.<span class=\"property\">props</span>) <span class=\"title function_\">initProps</span>(vm, opts.<span class=\"property\">props</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (opts.<span class=\"property\">methods</span>) <span class=\"title function_\">initMethods</span>(vm, opts.<span class=\"property\">methods</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (opts.<span class=\"property\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">initData</span>(vm)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">observe</span>(vm.<span class=\"property\">_data</span> = &#123;&#125;, <span class=\"literal\">true</span> <span class=\"comment\">/* asRootData */</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (opts.<span class=\"property\">computed</span>) <span class=\"title function_\">initComputed</span>(vm, opts.<span class=\"property\">computed</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (opts.<span class=\"property\">watch</span> &amp;&amp; opts.<span class=\"property\">watch</span> !== nativeWatch) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">initWatch</span>(vm, opts.<span class=\"property\">watch</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>七、<code>initProvide(vm) </code>略</p>\n<h2 id=\"进行挂载\">进行挂载<a title=\"#进行挂载\" href=\"#进行挂载\"></a></h2>\n<p>通过前面的代码阅读可知<code>_init</code>在前面对<code>vm</code>进行了很多的工作，到了<code>_init</code>的最后一步则执行<code>vm.$mount(vm.$options.el)</code>将实例挂载到<code>el</code>上。</p>\n<p>因为 <code>$mount</code> 这个方法的实现是和平台、构建方式都相关的，我们重点来了解带 <code>compiler</code> 版本的 <code>$mount</code> 实现。它</p>\n<ul>\n<li>将原本<code>src/platform/web/runtime/index.js</code>的<code>$mount</code>缓存  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$mount</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  el?: string | Element,</span></span><br><span class=\"line\"><span class=\"params\">  hydrating?: boolean</span></span><br><span class=\"line\"><span class=\"params\"></span>): <span class=\"title class_\">Component</span> &#123;</span><br><span class=\"line\">  el = el &amp;&amp; inBrowser ? <span class=\"title function_\">query</span>(el) : <span class=\"literal\">undefined</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">mountComponent</span>(<span class=\"variable language_\">this</span>, el, hydrating)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>在<code>src/platform/web/entry-runtime-with-compiler.js</code> 文件中重新定义<code>$mount</code>  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mount = <span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$mount</span>;</span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$mount</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  el?: string | Element,</span></span><br><span class=\"line\"><span class=\"params\">  hydrating?: boolean</span></span><br><span class=\"line\"><span class=\"params\"></span>): <span class=\"title class_\">Component</span> &#123;</span><br><span class=\"line\">  el = el &amp;&amp; <span class=\"title function_\">query</span>(el)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (el === <span class=\"variable language_\">document</span>.<span class=\"property\">body</span> || el === <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>) &#123;</span><br><span class=\"line\">    process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">      <span class=\"string\">`Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead.`</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> options = <span class=\"variable language_\">this</span>.<span class=\"property\">$options</span></span><br><span class=\"line\">  <span class=\"comment\">// resolve template/el and convert to render function</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!options.<span class=\"property\">render</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> template = options.<span class=\"property\">template</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (template) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> template === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (template.<span class=\"title function_\">charAt</span>(<span class=\"number\">0</span>) === <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">          template = <span class=\"title function_\">idToTemplate</span>(template)</span><br><span class=\"line\">          <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; !template) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">              <span class=\"string\">`Template element not found or is empty: <span class=\"subst\">$&#123;options.template&#125;</span>`</span>,</span><br><span class=\"line\">              <span class=\"variable language_\">this</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (template.<span class=\"property\">nodeType</span>) &#123;</span><br><span class=\"line\">        template = template.<span class=\"property\">innerHTML</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;invalid template option:&#x27;</span> + template, <span class=\"variable language_\">this</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (el) &#123;</span><br><span class=\"line\">      template = <span class=\"title function_\">getOuterHTML</span>(el)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (template) &#123;</span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; config.<span class=\"property\">performance</span> &amp;&amp; mark) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">mark</span>(<span class=\"string\">&#x27;compile&#x27;</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; render, staticRenderFns &#125; = <span class=\"title function_\">compileToFunctions</span>(template, &#123;</span><br><span class=\"line\">        <span class=\"attr\">outputSourceRange</span>: process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">        shouldDecodeNewlines,</span><br><span class=\"line\">        shouldDecodeNewlinesForHref,</span><br><span class=\"line\">        <span class=\"attr\">delimiters</span>: options.<span class=\"property\">delimiters</span>,</span><br><span class=\"line\">        <span class=\"attr\">comments</span>: options.<span class=\"property\">comments</span></span><br><span class=\"line\">      &#125;, <span class=\"variable language_\">this</span>)</span><br><span class=\"line\">      options.<span class=\"property\">render</span> = render</span><br><span class=\"line\">      options.<span class=\"property\">staticRenderFns</span> = staticRenderFns</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; config.<span class=\"property\">performance</span> &amp;&amp; mark) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">mark</span>(<span class=\"string\">&#x27;compile end&#x27;</span>)</span><br><span class=\"line\">        <span class=\"title function_\">measure</span>(<span class=\"string\">`vue <span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>._name&#125;</span> compile`</span>, <span class=\"string\">&#x27;compile&#x27;</span>, <span class=\"string\">&#x27;compile end&#x27;</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> mount.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, el, hydrating)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>最后再执行原本的<code>$mount</code>也就是执行了<code>mountComponent</code>方法</li>\n</ul>\n<p>我们来看看<code>mountComponent</code>方法干了什么</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">mountComponent</span> (</span><br><span class=\"line\">  <span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span>,</span><br><span class=\"line\">  <span class=\"attr\">el</span>: ?<span class=\"title class_\">Element</span>,</span><br><span class=\"line\">  hydrating?: boolean</span><br><span class=\"line\">): <span class=\"title class_\">Component</span> &#123;</span><br><span class=\"line\">  vm.<span class=\"property\">$el</span> = el</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!vm.<span class=\"property\">$options</span>.<span class=\"property\">render</span>) &#123;</span><br><span class=\"line\">    vm.<span class=\"property\">$options</span>.<span class=\"property\">render</span> = createEmptyVNode</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((vm.<span class=\"property\">$options</span>.<span class=\"property\">template</span> &amp;&amp; vm.<span class=\"property\">$options</span>.<span class=\"property\">template</span>.<span class=\"title function_\">charAt</span>(<span class=\"number\">0</span>) !== <span class=\"string\">&#x27;#&#x27;</span>) ||</span><br><span class=\"line\">        vm.<span class=\"property\">$options</span>.<span class=\"property\">el</span> || el) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">          <span class=\"string\">&#x27;You are using the runtime-only build of Vue where the template &#x27;</span> +</span><br><span class=\"line\">          <span class=\"string\">&#x27;compiler is not available. Either pre-compile the templates into &#x27;</span> +</span><br><span class=\"line\">          <span class=\"string\">&#x27;render functions, or use the compiler-included build.&#x27;</span>,</span><br><span class=\"line\">          vm</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">          <span class=\"string\">&#x27;Failed to mount component: template or render function not defined.&#x27;</span>,</span><br><span class=\"line\">          vm</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">callHook</span>(vm, <span class=\"string\">&#x27;beforeMount&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> updateComponent</span><br><span class=\"line\">  <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; config.<span class=\"property\">performance</span> &amp;&amp; mark) &#123;</span><br><span class=\"line\">    updateComponent = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> name = vm.<span class=\"property\">_name</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> id = vm.<span class=\"property\">_uid</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> startTag = <span class=\"string\">`vue-perf-start:<span class=\"subst\">$&#123;id&#125;</span>`</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> endTag = <span class=\"string\">`vue-perf-end:<span class=\"subst\">$&#123;id&#125;</span>`</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"title function_\">mark</span>(startTag)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> vnode = vm.<span class=\"title function_\">_render</span>()</span><br><span class=\"line\">      <span class=\"title function_\">mark</span>(endTag)</span><br><span class=\"line\">      <span class=\"title function_\">measure</span>(<span class=\"string\">`vue <span class=\"subst\">$&#123;name&#125;</span> render`</span>, startTag, endTag)</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"title function_\">mark</span>(startTag)</span><br><span class=\"line\">      vm.<span class=\"title function_\">_update</span>(vnode, hydrating)</span><br><span class=\"line\">      <span class=\"title function_\">mark</span>(endTag)</span><br><span class=\"line\">      <span class=\"title function_\">measure</span>(<span class=\"string\">`vue <span class=\"subst\">$&#123;name&#125;</span> patch`</span>, startTag, endTag)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    updateComponent = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      vm.<span class=\"title function_\">_update</span>(vm.<span class=\"title function_\">_render</span>(), hydrating)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// we set this to vm._watcher inside the watcher&#x27;s constructor</span></span><br><span class=\"line\">  <span class=\"comment\">// since the watcher&#x27;s initial patch may call $forceUpdate (e.g. inside child</span></span><br><span class=\"line\">  <span class=\"comment\">// component&#x27;s mounted hook), which relies on vm._watcher being already defined</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"title class_\">Watcher</span>(vm, updateComponent, noop, &#123;</span><br><span class=\"line\">    before () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (vm.<span class=\"property\">_isMounted</span> &amp;&amp; !vm.<span class=\"property\">_isDestroyed</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">callHook</span>(vm, <span class=\"string\">&#x27;beforeUpdate&#x27;</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, <span class=\"literal\">true</span> <span class=\"comment\">/* isRenderWatcher */</span>)</span><br><span class=\"line\">  hydrating = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// manually mounted instance, call mounted on self</span></span><br><span class=\"line\">  <span class=\"comment\">// mounted is called for render-created child components in its inserted hook</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (vm.<span class=\"property\">$vnode</span> == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    vm.<span class=\"property\">_isMounted</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"title function_\">callHook</span>(vm, <span class=\"string\">&#x27;mounted&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> vm</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>实例化一个渲染<code>Watcher</code>，在它的回调函数中会调用 <code>updateComponent</code> 方法</li>\n<li>在<code>updateComponent</code> 方法中调用 <code>vm._render</code> 方法先生成虚拟 Node</li>\n<li>最终调用 <code>vm._update</code> 更新 DOM。</li>\n</ul>\n<h2 id=\"小结\">小结<a title=\"#小结\" href=\"#小结\"></a></h2>\n<p>读完这一段代码能感觉到在这个简单的小demo中，vue的工作始终都围绕着<strong>生命周期</strong>、<strong>数据双向绑定</strong>和<strong>模板编译</strong>这三块内容。后面进一步打算围绕这几个部分的实现阅读源码。</p>\n","prev":{"title":"自动化部署Vue3博客项目","link":"2022/03/16/自动化部署Vue3博客项目"},"next":{"title":"软件测试复习","link":"2021/11/13/软件测试复习"},"plink":"http://example.com/2021/11/25/vue源码阅读（一）/","toc":[{"id":"从一个demo开始","title":"从一个demo开始","index":"1"},{"id":"new-vue","title":"new Vue","index":"2"},{"id":"给vm添加$option","title":"给vm添加$option","index":"3"},{"id":"一系列的初始化","title":"一系列的初始化","index":"4"},{"id":"进行挂载","title":"进行挂载","index":"5"},{"id":"小结","title":"小结","index":"6"}],"reading_time":"3048 words in 20 min"}